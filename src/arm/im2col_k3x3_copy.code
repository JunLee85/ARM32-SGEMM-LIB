/*********************************************************************************************/
.macro DO_PARAM_CHECK
	cmp SRC, #0
	beq IM2COL_END
	
	cmp DST, #0
	beq IM2COL_END

	cmp WIDTH, #3
	blt IM2COL_END
	
	cmp HEIGHT, #3
	blt IM2COL_END
.endm
/*********************************************************************************************/
.macro COPY_4_DWORDS_1
	pld	[SRC_ADDR, #32]
	fldmias	SRC_ADDR!, {s0-s3}
	
	fstmias	DST_ADDR!, {s0-s3}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #4
.endm

.macro COPY_2_DWORDS_1
	pld	[SRC_ADDR, #16]
	fldmias	SRC_ADDR!, {s0-s1}
	
	fstmias	DST_ADDR!, {s0-s1}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #2
.endm

.macro COPY_1_DWORDS_1
	pld	[SRC_ADDR, #8]
	fldmias	SRC_ADDR!, {s0}
	
	fstmias	DST_ADDR!, {s0}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #1
.endm

/*********************************************************************************************/
.macro COPY_4_DWORDS_1_2
	pld	[SRC_ADDR, #32]
	fldmias	SRC_ADDR!, {s0-s3}
	
	# store first
	fstmias	DST_ADDR!, {s0-s3}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s3}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #4
.endm

.macro COPY_2_DWORDS_1_2
	pld	[SRC_ADDR, #16]
	fldmias	SRC_ADDR!,{s0-s1}
	
	# store first
	fstmias	DST_ADDR!, {s0-s1}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s1}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #2
.endm

.macro COPY_1_DWORDS_1_2
	pld	[SRC_ADDR, #8]
	fldmias	SRC_ADDR!, {s0}
	
	# store first
	fstmias	DST_ADDR!, {s0}
	
	# store second
	fstmias	DST_ADDR_2!, {s0}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #1
.endm
/*********************************************************************************************/
.macro COPY_16_DWORDS_1_2_3
	#if 0
	pld	[SRC_ADDR, #128]
	
	vld1.32 {q0-q1}, [SRC_ADDR]!
	vst1.32 {q0-q1}, [DST_ADDR]!
	vst1.32 {q0-q1}, [DST_ADDR_2]!
	vst1.32 {q0-q1}, [DST_ADDR_3]!	
	
	vld1.32 {q0-q1}, [SRC_ADDR]!
	vst1.32 {q0-q1}, [DST_ADDR]!
	vst1.32 {q0-q1}, [DST_ADDR_2]!
	vst1.32 {q0-q1}, [DST_ADDR_3]!	
	
	#else
	pld	[SRC_ADDR, #128]
	fldmias	SRC_ADDR!, {s0-s15}
	
	# store first
	fstmias	DST_ADDR!, {s0-s15}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s15}
	
	# store third
	fstmias	DST_ADDR_3!, {s0-s15}
	#endif
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #16
.endm

.macro COPY_8_DWORDS_1_2_3
	pld	[SRC_ADDR, #64]
	fldmias	SRC_ADDR!, {s0-s7}
	
	# store first
	fstmias	DST_ADDR!, {s0-s7}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s7}
	
	# store third
	fstmias	DST_ADDR_3!, {s0-s7}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #8
.endm

.macro COPY_4_DWORDS_1_2_3
	pld	[SRC_ADDR, #32]
	fldmias	SRC_ADDR!, {s0-s3}
	
	# store first
	fstmias	DST_ADDR!, {s0-s3}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s3}
	
	# store third
	fstmias	DST_ADDR_3!, {s0-s3}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #4
.endm

.macro COPY_2_DWORDS_1_2_3
	pld	[SRC_ADDR, #16]
	fldmias	SRC_ADDR!, {s0-s1}
	
	# store first
	fstmias	DST_ADDR!, {s0-s1}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s1}
	
	# store third
	fstmias	DST_ADDR_3!, {s0-s1}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #2
.endm

.macro COPY_1_DWORDS_1_2_3
	pld	[SRC_ADDR, #8]
	fldmias	SRC_ADDR!, {s0}
	
	# store first
	fstmias	DST_ADDR!, {s0}
	
	# store second
	fstmias	DST_ADDR_2!, {s0}

	# store third
	fstmias	DST_ADDR_3!, {s0}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #1
.endm
/*********************************************************************************************/
.macro COPY_4_DWORDS_2_3
	pld	[SRC_ADDR, #32]
	fldmias	SRC_ADDR!, {s0-s3}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s3}
	
	# store third
	fstmias	DST_ADDR_3!, {s0-s3}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #4
.endm

.macro COPY_2_DWORDS_2_3
	pld	[SRC_ADDR, #16]
	fldmias	SRC_ADDR!, {s0-s1}
	
	# store second
	fstmias	DST_ADDR_2!, {s0-s1}
	
	# store third
	fstmias	DST_ADDR_3!, {s0-s1}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #2
.endm

.macro COPY_1_DWORDS_2_3
	pld	[SRC_ADDR, #8]
	fldmias	SRC_ADDR!, {s0}
	
	# store second
	fstmias	DST_ADDR_2!, {s0}

	# store third
	fstmias	DST_ADDR_3!, {s0}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #1
.endm
/*********************************************************************************************/
.macro COPY_4_DWORDS_3
	pld	[SRC_ADDR, #32]
	fldmias	SRC_ADDR!, {s0-s3}
	
	fstmias	DST_ADDR_3!, {s0-s3}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #4
.endm

.macro COPY_2_DWORDS_3
	pld	[SRC_ADDR, #16]
	fldmias	SRC_ADDR!, {s0-s1}
	
	fstmias	DST_ADDR_3!, {s0-s1}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #2
.endm

.macro COPY_1_DWORDS_3
	pld	[SRC_ADDR, #8]
	fldmias	SRC_ADDR!, {s0}
	
	fstmias	DST_ADDR_3!, {s0}
	
	subs ROW_LEFT_DWORDS, ROW_LEFT_DWORDS, #1
.endm
/*********************************************************************************************/



/*********************************************************************************************/
/* last but one - LBO */
.macro LBO_ROWS_COPY_FIRST
DO_LBO_ROWS_COPY_FIRST:
	# point next src row
	add SRC_ADDR, SRC_ADDR, #8	
	
	# point next dst(lbo)
	ldr DST_ADDR, OLD_DST
	mov r3, #3
	mul r3, DST_PITCH, r3
	add DST_ADDR, DST_ADDR, r3
	
	ldr ROW_LEFT_DWORDS, OLD_SRC_COPY_WIDTH
	
LOOP_COPY_4_DWORDS_FIRST_LBO:
	cmp ROW_LEFT_DWORDS, #4
	bge COPY_16_BYTES_FIRST_LBO

LOOP_COPY_2_DWORDS_FIRST_LBO:
	cmp ROW_LEFT_DWORDS, #2
	bge COPY_8_BYTES_FIRST_LBO

LOOP_COPY_1_DWORDS_FIRST_LBO:
	cmp ROW_LEFT_DWORDS, #1
	bge COPY_4_BYTES_FIRST_LBO
	
	# goto copy last row
	b DO_LAST_ROWS_COPY_FIRST
	
COPY_4_BYTES_FIRST_LBO:
	COPY_1_DWORDS_1
	b LOOP_COPY_1_DWORDS_FIRST_LBO	

COPY_8_BYTES_FIRST_LBO:
	COPY_2_DWORDS_1
	b LOOP_COPY_2_DWORDS_FIRST_LBO	

COPY_16_BYTES_FIRST_LBO:
	COPY_4_DWORDS_1
	b LOOP_COPY_4_DWORDS_FIRST_LBO
.endm

.macro LAST_ROWS_COPY_FIRST
DO_LAST_ROWS_COPY_FIRST:
	# point next src row
	add SRC_ADDR, SRC_ADDR, #8	
	
	# point next dst(lbo)
	ldr DST_ADDR, OLD_DST
	mov r3, #6
	mul r3, DST_PITCH, r3
	add DST_ADDR, DST_ADDR, r3
	
	ldr ROW_LEFT_DWORDS, OLD_SRC_COPY_WIDTH
	
LOOP_COPY_4_DWORDS_FIRST_LAST:
	cmp ROW_LEFT_DWORDS, #4
	bge COPY_16_BYTES_FIRST_LAST

LOOP_COPY_2_DWORDS_FIRST_LAST:
	cmp ROW_LEFT_DWORDS, #2
	bge COPY_8_BYTES_FIRST_LAST

LOOP_COPY_1_DWORDS_FIRST_LAST:
	cmp ROW_LEFT_DWORDS, #1
	bge COPY_4_BYTES_FIRST_LAST
    
	# VERITCAL END
	b DO_VERITCAL_ITERATION_END
	
COPY_4_BYTES_FIRST_LAST:
	COPY_1_DWORDS_1
	b LOOP_COPY_1_DWORDS_FIRST_LAST

COPY_8_BYTES_FIRST_LAST:
	COPY_2_DWORDS_1
	b LOOP_COPY_2_DWORDS_FIRST_LAST

COPY_16_BYTES_FIRST_LAST:
	COPY_4_DWORDS_1
	b LOOP_COPY_4_DWORDS_FIRST_LAST
.endm

/************************************************************************************/
.macro LBO_ROWS_COPY_SECOND
DO_LBO_ROWS_COPY_SECOND:
	# point next src row
	add SRC_ADDR, SRC_ADDR, #8	
	
	ldr ROW_LEFT_DWORDS, OLD_SRC_COPY_WIDTH
	
LOOP_COPY_4_DWORDS_SECOND_LBO:
	cmp ROW_LEFT_DWORDS, #4
	bge COPY_16_BYTES_SECOND_LBO

LOOP_COPY_2_DWORDS_SECOND_LBO:
	cmp ROW_LEFT_DWORDS, #2
	bge COPY_8_BYTES_SECOND_LBO

LOOP_COPY_1_DWORDS_SECOND_LBO:
	cmp ROW_LEFT_DWORDS, #1
	bge COPY_4_BYTES_SECOND_LBO

	b DO_LAST_ROWS_COPY_SECOND
	
COPY_4_BYTES_SECOND_LBO:
	COPY_1_DWORDS_2_3
	b LOOP_COPY_1_DWORDS_SECOND_LBO

COPY_8_BYTES_SECOND_LBO:
	COPY_2_DWORDS_2_3
	b LOOP_COPY_2_DWORDS_SECOND_LBO	

COPY_16_BYTES_SECOND_LBO:
	COPY_4_DWORDS_2_3
	b LOOP_COPY_4_DWORDS_SECOND_LBO
.endm

.macro LAST_ROWS_COPY_SECOND
DO_LAST_ROWS_COPY_SECOND:
	# point next src row
	add SRC_ADDR, SRC_ADDR, #8	
	
	ldr ROW_LEFT_DWORDS, OLD_SRC_COPY_WIDTH
	
LOOP_COPY_4_DWORDS_SECOND_LAST:
	cmp ROW_LEFT_DWORDS, #4
	bge COPY_16_BYTES_SECOND_LAST

LOOP_COPY_2_DWORDS_SECOND_LAST:
	cmp ROW_LEFT_DWORDS, #2
	bge COPY_8_BYTES_SECOND_LAST

LOOP_COPY_1_DWORDS_SECOND_LAST:
	cmp ROW_LEFT_DWORDS, #1
	bge COPY_4_BYTES_SECOND_LAST

	b DO_VERITCAL_ITERATION_END
	
COPY_4_BYTES_SECOND_LAST:
	COPY_1_DWORDS_3
	b LOOP_COPY_1_DWORDS_SECOND_LAST

COPY_8_BYTES_SECOND_LAST:
	COPY_2_DWORDS_3
	b LOOP_COPY_2_DWORDS_SECOND_LAST

COPY_16_BYTES_SECOND_LAST:
	COPY_4_DWORDS_3
	b LOOP_COPY_4_DWORDS_SECOND_LAST
.endm

/************************************************************************************/
.macro LBO_ROWS_COPY_THIRD
DO_LBO_ROWS_COPY_THIRD:
	# point next src row
	add SRC_ADDR, SRC_ADDR, #8	
	
	ldr ROW_LEFT_DWORDS, OLD_SRC_COPY_WIDTH
	
LOOP_COPY_4_DWORDS_THIRD_LBO:
	cmp ROW_LEFT_DWORDS, #4
	bge COPY_16_BYTES_THIRD_LBO

LOOP_COPY_2_DWORDS_THIRD_LBO:
	cmp ROW_LEFT_DWORDS, #2
	bge COPY_8_BYTES_THIRD_LBO

LOOP_COPY_1_DWORDS_THIRD_LBO:
	cmp ROW_LEFT_DWORDS, #1
	bge COPY_4_BYTES_THIRD_LBO

	b DO_LAST_ROWS_COPY_THIRD
	
COPY_4_BYTES_THIRD_LBO:
	COPY_1_DWORDS_2_3
	b LOOP_COPY_1_DWORDS_THIRD_LBO

COPY_8_BYTES_THIRD_LBO:
	COPY_2_DWORDS_2_3
	b LOOP_COPY_2_DWORDS_THIRD_LBO	

COPY_16_BYTES_THIRD_LBO:
	COPY_4_DWORDS_2_3
	b LOOP_COPY_4_DWORDS_THIRD_LBO
.endm

.macro LAST_ROWS_COPY_THIRD
DO_LAST_ROWS_COPY_THIRD:
	# point next src row
	add SRC_ADDR, SRC_ADDR, #8	
	
	ldr ROW_LEFT_DWORDS, OLD_SRC_COPY_WIDTH
	
LOOP_COPY_4_DWORDS_THIRD_LAST:
	cmp ROW_LEFT_DWORDS, #4
	bge COPY_16_BYTES_THIRD_LAST

LOOP_COPY_2_DWORDS_THIRD_LAST:
	cmp ROW_LEFT_DWORDS, #2
	bge COPY_8_BYTES_THIRD_LAST

LOOP_COPY_1_DWORDS_THIRD_LAST:
	cmp ROW_LEFT_DWORDS, #1
	bge COPY_4_BYTES_THIRD_LAST

	b DO_VERITCAL_ITERATION_END
	
COPY_4_BYTES_THIRD_LAST:
	COPY_1_DWORDS_3
	b LOOP_COPY_1_DWORDS_THIRD_LAST

COPY_8_BYTES_THIRD_LAST:
	COPY_2_DWORDS_3
	b LOOP_COPY_2_DWORDS_THIRD_LAST

COPY_16_BYTES_THIRD_LAST:
	COPY_4_DWORDS_3
	b LOOP_COPY_4_DWORDS_THIRD_LAST
.endm
